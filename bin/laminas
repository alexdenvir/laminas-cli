#!/usr/bin/env php
<?php

/**
 * @see       https://github.com/laminas/laminas-cli for the canonical source repository
 * @copyright https://github.com/laminas/laminas-cli/blob/master/COPYRIGHT.md
 * @license   https://github.com/laminas/laminas-cli/blob/master/LICENSE.md New BSD License
 */

declare(strict_types=1);

use Laminas\Cli\ContainerCommandLoader;
use Laminas\Cli\ContainerResolver;
use PackageVersions\Versions;
use Symfony\Component\Console\Application;

if (file_exists($a = __DIR__ . '/../../../autoload.php')) {
    require $a;
} elseif (file_exists($a = __DIR__ . '/../vendor/autoload.php')) {
    require $a;
} elseif (file_exists($a = __DIR__ . '/../autoload.php')) {
    require $a;
} else {
    fwrite(STDERR, 'Cannot locate autoloader; please run "composer install"' . PHP_EOL);
    exit(1);
}

// Set the main application directory as the current working directory
chdir(dirname($a) . '/../');

$container = ContainerResolver::resolve();
$config = $container->get('config')['laminas-cli'] ?? [];

$version = strstr(Versions::getVersion('laminas/laminas-cli'), '@', true);

$lazyLoad = false;

$commands = $config['commands'] ?? [];

if (file_exists('config/development.config.php')) {
    $lazyLoad = true;

    $commands = \Laminas\Stdlib\ArrayUtils::merge($commands, $config['commands-dev'] ?? []);
}

$application = new Application('laminas-cli', $version);
$application->setCommandLoader(
    new ContainerCommandLoader($container, $commands, $lazyLoad)
);
$application->run();
